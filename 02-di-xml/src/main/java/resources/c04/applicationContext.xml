<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!--
        引用类型的自动注入：spring框架根据某些规则可以给引用类型赋值，不需要你给引用类型赋值
        （只能用引用类型，简单类型不行）
        常用的两种规则 byName byType
        1.byName（按名称注入）：Java类中引用类型的属性名和spring容器中（配置文件）<bean>的id名称一样，且数据类型是一致的
                              这样的容器中的bean，能够赋值给引用类型。
                              <bean id="xx" class="yyy" autowire="byName">
                                  "简单属性赋值"
                              <bead/>
                              即我们定义school类时，id与student内student参数名称一样。

        2.byType（按类型注入）：Java类中引用类型的数据类型和spring容器中（配置文件）<bean>的class属性是同源关系的，这样
                              的<bean>是能够赋值给引用类型（同源就是一类的意思）
                              同源有三种：1.Java类中引用类型的数据类型和bean的class的值是一样的
                                        2.Java类中引用类型的数据类型和bean的class的值是父子类关系
                                        3.Java类中引用类型的数据类型和bean的class的值是借口和实现类关系的
                              <bean id="xx" class="yyy" autowire="byType">
                                  "简单属性赋值"
                              <bead/>

    -->
    <!-- using parameter to init -->
    <bean id = "myStudent" class = "com.Sample.c04.Student" autowire="byName">
        <property name="name" value="李四"/>
        <property name="age" value="20"/>
        <!-- 引用类型 -->
        <!-- <property name="school" ref="mySchool"/> -->
    </bean>

    <bean id="school" class="com.Sample.c04.School">
        <property name="name" value="北京大学"/>
        <property name="address" value="北京市海淀区"/>
    </bean>




</beans>